<!DOCTYPE html>
html(lang="en")
head
  meta(charset="UTF-8")
  meta(name='viewport', content='width=device-width, initial-scale=1')
  title Spectrum CSS-Grid
  link(rel="stylesheet", href="spectrum-css-grid.css")
  link(rel="stylesheet", href="demo.css")
  script(type="text/javascript",src="https://google-code-prettify.googlecode.com/svn/loader/run_prettify.js")
body  
  .spectrum-grid--fixed
    .header 
      .header-logo 
        include spectrum_logo.svg
      .header-repoLink
        a(href="https://git.corp.adobe.com/Spectrum/spectrum-css-grid/" target="_blank") Spectrum-CSS-Grid Repository
    br
    h1.main-title Spectrum CSS-Grid Demo
    
    h2 Fixed
    p Fixed responsive grid.
    .box-row(style="grid-column: 1/2;")
    .box-row(style="grid-column: 2/3;")
    .box-row(style="grid-column: 3/4;")
    .box-row(style="grid-column: 4/5;")
    .box-row(style="grid-column: 5/6;")
    .box-row(style="grid-column: 6/7;")
    .box-row(style="grid-column: 7/8;")
    .box-row(style="grid-column: 8/9;")
    .box-row(style="grid-column: 9/10;")
    .box-row(style="grid-column: 10/11;")
    .box-row(style="grid-column: 11/12;")
    .box-row(style="grid-column: 12/13;")
      
    .box-row(style="grid-column: 1/4;")
    .box-row(style="grid-column: 4/6;")
    .box-row(style="grid-column: 6/13;")
    pre.prettyprint
      code.lang-css
          :code
            #element1 {grid-column: 1/4;}
            #element2 {grid-column: 4/6;}
            #element3 {grid-column: 6/13;}
  .spectrum-grid--fluid
      h2 Fluid
      p Percent based widths allow fluid resizing of columns and rows.
      .box-row(style="grid-column: 1/2;")
      .box-row(style="grid-column: 2/3;")
      .box-row(style="grid-column: 3/4;")
      .box-row(style="grid-column: 4/5;")
      .box-row(style="grid-column: 5/6;")
      .box-row(style="grid-column: 6/7;")
      .box-row(style="grid-column: 7/8;")
      .box-row(style="grid-column: 8/9;")
      .box-row(style="grid-column: 9/10;")
      .box-row(style="grid-column: 10/11;")
      .box-row(style="grid-column: 11/12;")
      .box-row(style="grid-column: 12/13;")
        
      .box-row(style="grid-column: 1/4;")
      .box-row(style="grid-column: 4/6;")
      .box-row(style="grid-column: 6/13;")
  // Offsets
  .spectrum-grid--fluid
      h2 Offsets
      p Offsetting placement of layout region. Simply define the `grid-column-start` property with the column you want the layout region to begin.
      .box-row(style="grid-column: 12/13;")
      .box-row(style="grid-column: 11/13;")
      .box-row(style="grid-column: 10/13;")
      .box-row(style="grid-column: 9/13;")
      .box-row(style="grid-column: 8/13;")
      .box-row(style="grid-column: 7/13;")
      .box-row(style="grid-column: 6/13;")
      .box-row(style="grid-column: 5/13;")
      .box-row(style="grid-column: 4/13;")
      .box-row(style="grid-column: 3/13;")
      .box-row(style="grid-column: 2/13;")
      .box-row(style="grid-column: 1/13;")
      pre.prettyprint
        code.lang-css
            :code
              #element1 {grid-column: 10/13;}
  // Nested Grids
  .spectrum-grid--fluid
      h2 Nested Grids
      p Nest grids inside grids inside grids.
      .box-row(style="grid-column: 1/7;")
        .spectrum-grid--fluid
          .box-nested(style="grid-column: 1/4")
          .box-nested(style="grid-column: 4/10")
          .box-nested(style="grid-column: 10/13")
      .box-row(style="grid-column: 7/13;")
        .spectrum-grid--fluid
          .box-nested(style="grid-column: 1/7")
          .box-nested(style="grid-column: 7/13")
      pre.prettyprint
        code.lang-html
            :code
              <main class="spectrum-grid--fluid">
                <div id="container1">
                  <div class="spectrum-grid--fluid">
                    <div id="element1"></div>
                  </div>
                </div>
                <div id="container2">
                  <div class="spectrum-grid--fluid">
                    <div id="element2"></div>
                  </div>
                </div>

  .spectrum-grid--fluid
      h2 Alignment
      p Align elements to the start or end of a row as well as the top, bottom, or center of a column.
      p Row alignments are done by specifying `grid-column-start` and `grid-column-end` properties. Column alignment is specified by the `grid-row` property.
      h3 Start of row
      .box-row(style="grid-column: 1/13;")
        .spectrum-grid--fluid
          .box-nested(style="grid-column: 1/7;")
      pre.prettyprint
        code.lang-css
            :code
              #element1 {grid-column: 1/7;}
      
      h3 Center of row
      .box-row(style="grid-column: 1/13;")
        .spectrum-grid--fluid
          .box-nested(style="grid-column: 4/10;")
      pre.prettyprint
        code.lang-css
            :code
              #element1 {grid-column: 1/7;}
              
      h3 End of row
      .box-row(style="grid-column: 1/13;")
        .spectrum-grid--fluid
          .box-nested(style="grid-column: 7/13;")
      pre.prettyprint
        code.lang-css
            :code
              #element1 {grid-column: 1/7;}
      
      // Vertical alignment 
      h3 Top of row
      .box-row(style="grid-column: 1/13;")
        .spectrum-grid--fluid
          .box-nested(style="grid-column: 1/7; grid-row: 1/10")
          .box-nested(style="grid-column: 7/13; grid-row: 1/2")

      pre.prettyprint
        code.lang-css
            :code
              #element1 {grid-row: 1/2;}
      
      h3 Middle of row
      .box-row(style="grid-column: 1/13;")
        .spectrum-grid--fluid
          .box-nested(style="grid-column: 1/7; grid-row: 1/10")
          .box-nested(style="grid-column: 7/13; grid-row: 4/6")

      pre.prettyprint
        code.lang-css
            :code
              #element1 {grid-row: 4/6;}
              
      h3 End of row
      .box-row(style="grid-column: 1/13;")
        .spectrum-grid--fluid
          .box-nested(style="grid-column: 1/7; grid-row: 1/10")
          .box-nested(style="grid-column: 7/13; grid-row: 6/10")

      pre.prettyprint
        code.lang-css
            :code
              #element1 {grid-row: 6/10;}

  .spectrum-grid--fluid
      h2 Distribution
      p Distributing layout regions is also done by defining `grid-column` start and end properties.
      .box-row(style="grid-column: 1/13;")
        .spectrum-grid--fluid
          .box-nested(style="grid-column: 1/4;")
          .box-nested(style="grid-column: 6/8;")
          .box-nested(style="grid-column: 10/13;")
      .box-row(style="grid-column: 1/13;")
        .spectrum-grid--fluid
          .box-nested(style="grid-column: 2/5;")
          .box-nested(style="grid-column: 6/8;")
          .box-nested(style="grid-column: 9/12;")
          
              
                  
  .spectrum-grid--fluid
    h2 Layouts in CSS
    p All you need to remember is grid container and layout regions defined in your CSS.
    pre.prettyprint
      code.lang-html
          :code
            <div class="spectrum-grid--fluid">
              <div id="element1"> Layout Region </div>
            </div>
      br
      br
      code.lang-css
          :code
            #element1 {grid-columns: 1/6;}
  
